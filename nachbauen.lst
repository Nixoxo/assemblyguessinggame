nachbauen                                                                                                               PAGE 1
                         1     ; P0 7 LED Display
                         2     ; P1 simple keypad
                         3     ; P2 16xLeds
                         4
                         5     ;INIT ANFANG
  0080                   6     score_board DATA P0
****WARNING: Exceeding internal data memory capacity: score_board <- 128
  0090                   7     input DATA P1
****WARNING: Exceeding internal data memory capacity: input <- 144
  00A0                   8     output_1 DATA P2
****WARNING: Exceeding internal data memory capacity: output_1 <- 160
  00B0                   9     output_2 DATA P3
****WARNING: Exceeding internal data memory capacity: output_2 <- 176
  000F                  10     maske1 equ 00001111b
  00F0                  11     maske2 equ 11110000b
  0001                  12     maskelastbit equ 00000001b
  0002                  13     maskeprelastbit equ 00000010b
  0004                  14     maskepreprelastbit equ 00000100b
  0008                  15     maskeprepreprelastbit equ 00001000b
                        16
                        17     ;INIT ENDE
                        18
                        19
0000 758010             20                     mov score_board,#010h
0003 1200E2             21                     lcall animation_anfang
                        22     start:                                                                                          ;STAR
0006 12009F             23                     lcall wait
0009 E580               24                     mov A,score_board
000B B40003             25                     cjne A,#00h,warte_pins
000E 0200FE             26                     jmp game_over
                        27     warte_pins:                                                                                     ;ZUFA
0011 1D                 28                     dec R5
0012 0A                 29                     inc R2
0013 E590               30                     mov A,input
0015 B400F9             31                     cjne A,#00h,warte_pins
0018 8AA0               32                     mov Output_1,R2
001A 8DB0               33                     mov Output_2,R5
001C 12009F             34                     call wait
001F A8A0               35                     mov R0,Output_1                                                 ;MUSTER SPEICHERN IN
0021 A9B0               36                     mov R1,Output_2
0023 75A000             37                     mov Output_1,#00h
0026 75B000             38                     mov Output_2,#00h
                        39
                        40     eingabe:                                                        ;EINGABE DES MUSTERS
                        41
                        42     zeile_1:
0029 E590               43             mov A,input
002B 540F               44             anl A,#maske1
002D F5A0               45             mov Output_1,A
002F 3094F7             46             jnb P1.4,zeile_1                                                ;Zeile 1 bestätigen
                        47     zeile_2:
0032 E590               48             mov A,input
0034 23                 49             rl A
0035 23                 50             rl A
0036 23                 51             rl A
0037 23                 52             rl A
0038 54F0               53             anl A,#maske2
003A 85B0F0             54             mov B,Output_2
003D 53F00F             55             anl B,#maske1
0040 45F0               56             orl A,B
0042 F5A0               57             mov Output_1,A
0044 3095EB             58             jnb P1.5,zeile_2                                                ;Zeile 2 bestätigen
                        59     zeile_3:
0047 E590               60             mov A,input
0049 540F               61             anl A,#maske1
004B F5B0               62             mov Output_2,A
004D 3096F7             63             jnb P1.6,zeile_3                                                ;Zeile 3 bestätigen
                        64     zeile_4:
0050 E590               65             mov A,input
0052 23                 66             rl A
0053 23                 67             rl A
0054 23                 68             rl A
0055 23                 69             rl A
0056 54F0               70             anl A,#maske2
0058 85B0F0             71             mov B,Output_2
005B 53F00F             72             anl B,#maske1
005E 45F0               73             orl A,B
0060 F5B0               74             mov Output_2,A
0062 3097EB             75                       jnb P1.7,zeile_4                                              ;Zeile 4 bestätigen
                        76
                        77
                        78     abfrage:
0065 E8                 79                     mov A,R0
0066 ABA0               80                     mov R3, output_1
0068 ACB0               81                     mov R4, output_2
006A B5A01B             82                     cjne A,Output_1,falsch
006D E9                 83                     mov A,R1
006E B5B017             84                     cjne A,Output_2,falsch
                        85
                        86     richtig:
0071 E580               87                     mov A,score_board
0073 04                 88                     inc A
0074 FB                 89                     mov R3,A
0075 FC                 90                     mov R4,A
0076 540F               91                     anl A,#maske1
0078 B40A08             92                     cjne A,#00001010b,normal_hoch
007B 7410               93                     mov A,#00010000b                                                        ;ÜBERGANG VON
007D FC                 94                     mov R4,A
007E EB                 95                     mov A,R3
007F 54F0               96                     anl A,#maske2
0081 2C                 97                     add A,R4
0082 FC                 98                     mov R4,A
                        99
                       100     normal_hoch:
0083 8C80              101                     mov score_board,R4
0085 0200A8            102                     jmp animation_richtig
                       103
                       104     falsch:                                                                                         ;-1 P
0088 E580              105                     mov A,score_board
008A 14                106                     dec A
008B FB                107                     mov R3,A
008C FC                108                     mov R4,A
008D 540F              109                     anl A,#maske1
008F B40F08            110                     cjne A,#00001111b,normal_runter
0092 7409              111                     mov A,#00001001b                                                        ;ÜBERGANG VON
0094 FC                112                     mov R4,A
0095 EB                113                     mov A,R3
0096 54F0              114                     anl A,#maske2
0098 2C                115                     add A,R4
0099 FC                116                     mov R4,A
                       117
                       118     normal_runter:
009A 8C80              119                     mov score_board,R4
009C 0200C5            120                     jmp animation_falsch
                       121
                       122
                       123
                       124
                       125     wait:
009F 7E02              126                     mov R6,#02h
                       127
                       128     w1_s1:
00A1 7F01              129                     mov R7,#01h
                       130
                       131     w1_s2:
00A3 DFFE              132                     djnz R7,w1_s2
00A5 DEFA              133                     djnz R6,w1_s1
00A7 22                134                     ret
                       135
                       136
                       137
                       138
                       139     animation_richtig:                                                              ;ANIMATION ZWISCHEN R
00A8 75A0F6            140                     mov Output_1,#11110110b
00AB 75B06F            141                     mov Output_2,#01101111b
00AE 12009F            142                     lcall wait
00B1 75A0FF            143                     mov Output_1,#0FFh
00B4 75B0FF            144                     mov Output_2,#0FFh
00B7 12009F            145                     lcall wait
00BA 75A000            146                     mov Output_1,#00h
00BD 75B000            147                     mov Output_2,#00h
00C0 12009F            148                     lcall wait
00C3 0106              149                     jmp start
                       150
                       151     animation_falsch:                                                                       ;ANIMATION ZW
00C5 75A0F0            152                     mov Output_1,#11110000b
00C8 75B00F            153                     mov Output_2,#00001111b
00CB 12009F            154                     lcall wait
00CE 75A0FF            155                     mov Output_1,#0FFh
00D1 75B0FF            156                     mov Output_2,#0FFh
00D4 12009F            157                     lcall wait
00D7 75A000            158                     mov Output_1,#00h
00DA 75B000            159                     mov Output_2,#00h
00DD 12009F            160                     lcall wait
00E0 0106              161                     jmp start
                       162
                       163
                       164     animation_anfang:                                                                       ;Animation am
00E2 75A0A5            165             mov Output_1,#10100101b
00E5 75B0A5            166             mov Output_2,#10100101b
00E8 12009F            167             lcall wait
00EB 75A05A            168             mov Output_1,#01011010b
00EE 75B05A            169             mov Output_2,#01011010b
00F1 12009F            170             lcall wait
00F4 75A000            171             mov Output_1,#00h
00F7 75B000            172             mov Output_2,#00h
00FA 12009F            173             lcall wait
00FD 22                174             ret
                       175
                       176     game_over:                                                                                      ;GAME
00FE 75A069            177                     mov Output_1,#01101001b
0101 75B096            178                     mov Output_2,#10010110b
0104 80F8              179                     jmp game_over
                       180     end
ASSEMBLY COMPLETE, NO ERRORS FOUND, 4 WARNINGS


ERROR SUMMARY:
Line 6, WARNING: Exceeding internal data memory capacity: score_board <- 128
Line 8, WARNING: Exceeding internal data memory capacity: input <- 144
Line 10, WARNING: Exceeding internal data memory capacity: output_1 <- 160
Line 12, WARNING: Exceeding internal data memory capacity: output_2 <- 176

SYMBOL TABLE:
??MCU_8051_IDE . . . . . . . . . . .  N  NUMB  8051H  NOT USED
??VERSION. . . . . . . . . . . . . .  N  NUMB  0147H  NOT USED
ABFRAGE. . . . . . . . . . . . . . .  C  ADDR  0065H  NOT USED
AC . . . . . . . . . . . . . . . . .  B  ADDR  00D6H  NOT USED
ACC. . . . . . . . . . . . . . . . .  D  ADDR  00E0H  NOT USED
ACSR . . . . . . . . . . . . . . . .  D  ADDR  0097H  NOT USED
ADCF . . . . . . . . . . . . . . . .  D  ADDR  00F6H  NOT USED
ADCLK. . . . . . . . . . . . . . . .  D  ADDR  00F2H  NOT USED
ADCON. . . . . . . . . . . . . . . .  D  ADDR  00F3H  NOT USED
ADDH . . . . . . . . . . . . . . . .  D  ADDR  00F5H  NOT USED
ADDL . . . . . . . . . . . . . . . .  D  ADDR  00F4H  NOT USED
ANIMATION_ANFANG . . . . . . . . . .  C  ADDR  00E2H
ANIMATION_FALSCH . . . . . . . . . .  C  ADDR  00C5H
ANIMATION_RICHTIG. . . . . . . . . .  C  ADDR  00A8H
AUXR . . . . . . . . . . . . . . . .  D  ADDR  008EH  NOT USED
AUXR1. . . . . . . . . . . . . . . .  D  ADDR  00A2H  NOT USED
B. . . . . . . . . . . . . . . . . .  D  ADDR  00F0H
BDRCON . . . . . . . . . . . . . . .  D  ADDR  009BH  NOT USED
BDRCON_1 . . . . . . . . . . . . . .  D  ADDR  009CH  NOT USED
BRL. . . . . . . . . . . . . . . . .  D  ADDR  009AH  NOT USED
CCAP0H . . . . . . . . . . . . . . .  D  ADDR  00FAH  NOT USED
CCAP0L . . . . . . . . . . . . . . .  D  ADDR  00EAH  NOT USED
CCAP1H . . . . . . . . . . . . . . .  D  ADDR  00FBH  NOT USED
CCAP1L . . . . . . . . . . . . . . .  D  ADDR  00EBH  NOT USED
CCAP2H . . . . . . . . . . . . . . .  D  ADDR  00FCH  NOT USED
CCAP3H . . . . . . . . . . . . . . .  D  ADDR  00FDH  NOT USED
CCAP4H . . . . . . . . . . . . . . .  D  ADDR  00FEH  NOT USED
CCAPL2H. . . . . . . . . . . . . . .  D  ADDR  00FCH  NOT USED
CCAPL2L. . . . . . . . . . . . . . .  D  ADDR  00ECH  NOT USED
CCAPL3H. . . . . . . . . . . . . . .  D  ADDR  00FDH  NOT USED
CCAPL3L. . . . . . . . . . . . . . .  D  ADDR  00EDH  NOT USED
CCAPL4H. . . . . . . . . . . . . . .  D  ADDR  00FEH  NOT USED
CCAPL4L. . . . . . . . . . . . . . .  D  ADDR  00EEH  NOT USED
CCAPM0 . . . . . . . . . . . . . . .  D  ADDR  00DAH  NOT USED
CCAPM1 . . . . . . . . . . . . . . .  D  ADDR  00DBH  NOT USED
CCAPM2 . . . . . . . . . . . . . . .  D  ADDR  00DCH  NOT USED
CCAPM3 . . . . . . . . . . . . . . .  D  ADDR  00DDH  NOT USED
CCAPM4 . . . . . . . . . . . . . . .  D  ADDR  00DEH  NOT USED
CCF0 . . . . . . . . . . . . . . . .  B  ADDR  00D8H  NOT USED
CCF1 . . . . . . . . . . . . . . . .  B  ADDR  00D9H  NOT USED
CCF2 . . . . . . . . . . . . . . . .  B  ADDR  00DAH  NOT USED
CCF3 . . . . . . . . . . . . . . . .  B  ADDR  00DBH  NOT USED
CCF4 . . . . . . . . . . . . . . . .  B  ADDR  00DCH  NOT USED
CCON . . . . . . . . . . . . . . . .  D  ADDR  00D8H  NOT USED
CFINT. . . . . . . . . . . . . . . .  C  ADDR  0033H  NOT USED
CH . . . . . . . . . . . . . . . . .  D  ADDR  00F9H  NOT USED
CKCON. . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CKCON0 . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CKRL . . . . . . . . . . . . . . . .  D  ADDR  0097H  NOT USED
CKSEL. . . . . . . . . . . . . . . .  D  ADDR  0085H  NOT USED
CL . . . . . . . . . . . . . . . . .  D  ADDR  00E9H  NOT USED
CLKREG . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CMOD . . . . . . . . . . . . . . . .  D  ADDR  00D9H  NOT USED
CPRL2. . . . . . . . . . . . . . . .  B  ADDR  00C8H  NOT USED
CR . . . . . . . . . . . . . . . . .  B  ADDR  00DEH  NOT USED
CT2. . . . . . . . . . . . . . . . .  B  ADDR  00C9H  NOT USED
CY . . . . . . . . . . . . . . . . .  B  ADDR  00D7H  NOT USED
DP0H . . . . . . . . . . . . . . . .  D  ADDR  0083H  NOT USED
DP0L . . . . . . . . . . . . . . . .  D  ADDR  0082H  NOT USED
DP1H . . . . . . . . . . . . . . . .  D  ADDR  0085H  NOT USED
DP1L . . . . . . . . . . . . . . . .  D  ADDR  0084H  NOT USED
DPH. . . . . . . . . . . . . . . . .  D  ADDR  0083H  NOT USED
DPL. . . . . . . . . . . . . . . . .  D  ADDR  0082H  NOT USED
EA . . . . . . . . . . . . . . . . .  B  ADDR  00AFH  NOT USED
EC . . . . . . . . . . . . . . . . .  B  ADDR  00AEH  NOT USED
EECON. . . . . . . . . . . . . . . .  D  ADDR  0096H  NOT USED
EINGABE. . . . . . . . . . . . . . .  C  ADDR  0029H  NOT USED
ES . . . . . . . . . . . . . . . . .  B  ADDR  00ACH  NOT USED
ET0. . . . . . . . . . . . . . . . .  B  ADDR  00A9H  NOT USED
ET1. . . . . . . . . . . . . . . . .  B  ADDR  00ABH  NOT USED
ET2. . . . . . . . . . . . . . . . .  B  ADDR  00ADH  NOT USED
EX0. . . . . . . . . . . . . . . . .  B  ADDR  00A8H  NOT USED
EX1. . . . . . . . . . . . . . . . .  B  ADDR  00AAH  NOT USED
EXEN2. . . . . . . . . . . . . . . .  B  ADDR  00CBH  NOT USED
EXF2 . . . . . . . . . . . . . . . .  B  ADDR  00CEH  NOT USED
EXTI0. . . . . . . . . . . . . . . .  C  ADDR  0003H  NOT USED
EXTI1. . . . . . . . . . . . . . . .  C  ADDR  0013H  NOT USED
F0 . . . . . . . . . . . . . . . . .  B  ADDR  00D5H  NOT USED
FALSCH . . . . . . . . . . . . . . .  C  ADDR  0088H
FE . . . . . . . . . . . . . . . . .  B  ADDR  009FH  NOT USED
GAME_OVER. . . . . . . . . . . . . .  C  ADDR  00FEH
IE . . . . . . . . . . . . . . . . .  D  ADDR  00A8H  NOT USED
IE0. . . . . . . . . . . . . . . . .  B  ADDR  0089H  NOT USED
IE1. . . . . . . . . . . . . . . . .  B  ADDR  008BH  NOT USED
INPUT. . . . . . . . . . . . . . . .  D  ADDR  0090H
INT0 . . . . . . . . . . . . . . . .  B  ADDR  00B2H  NOT USED
INT1 . . . . . . . . . . . . . . . .  B  ADDR  00B3H  NOT USED
IP . . . . . . . . . . . . . . . . .  D  ADDR  00B8H  NOT USED
IPH. . . . . . . . . . . . . . . . .  D  ADDR  00B7H  NOT USED
IPH0 . . . . . . . . . . . . . . . .  D  ADDR  00B7H  NOT USED
IPH1 . . . . . . . . . . . . . . . .  D  ADDR  00B3H  NOT USED
IPL0 . . . . . . . . . . . . . . . .  D  ADDR  00B8H  NOT USED
IPL1 . . . . . . . . . . . . . . . .  D  ADDR  00B2H  NOT USED
IT0. . . . . . . . . . . . . . . . .  B  ADDR  0088H  NOT USED
IT1. . . . . . . . . . . . . . . . .  B  ADDR  008AH  NOT USED
KBE. . . . . . . . . . . . . . . . .  D  ADDR  009DH  NOT USED
KBF. . . . . . . . . . . . . . . . .  D  ADDR  009EH  NOT USED
KBLS . . . . . . . . . . . . . . . .  D  ADDR  009CH  NOT USED
MASKE1 . . . . . . . . . . . . . . .  N  NUMB  000FH
MASKE2 . . . . . . . . . . . . . . .  N  NUMB  00F0H
MASKELASTBIT . . . . . . . . . . . .  N  NUMB  0001H  NOT USED
MASKEPRELASTBIT. . . . . . . . . . .  N  NUMB  0002H  NOT USED
MASKEPREPRELASTBIT . . . . . . . . .  N  NUMB  0004H  NOT USED
MASKEPREPREPRELASTBIT. . . . . . . .  N  NUMB  0008H  NOT USED
NORMAL_HOCH. . . . . . . . . . . . .  C  ADDR  0083H
NORMAL_RUNTER. . . . . . . . . . . .  C  ADDR  009AH
OSCCON . . . . . . . . . . . . . . .  D  ADDR  0086H  NOT USED
OUTPUT_1 . . . . . . . . . . . . . .  D  ADDR  00A0H
OUTPUT_2 . . . . . . . . . . . . . .  D  ADDR  00B0H
OV . . . . . . . . . . . . . . . . .  B  ADDR  00D2H  NOT USED
P. . . . . . . . . . . . . . . . . .  B  ADDR  00D0H  NOT USED
P0 . . . . . . . . . . . . . . . . .  D  ADDR  0080H  NOT USED
P1 . . . . . . . . . . . . . . . . .  D  ADDR  0090H
P1M1 . . . . . . . . . . . . . . . .  D  ADDR  00D4H  NOT USED
P1M2 . . . . . . . . . . . . . . . .  D  ADDR  00E2H  NOT USED
P2 . . . . . . . . . . . . . . . . .  D  ADDR  00A0H  NOT USED
P3 . . . . . . . . . . . . . . . . .  D  ADDR  00B0H  NOT USED
P3M1 . . . . . . . . . . . . . . . .  D  ADDR  00D5H  NOT USED
P3M2 . . . . . . . . . . . . . . . .  D  ADDR  00E3H  NOT USED
P4 . . . . . . . . . . . . . . . . .  D  ADDR  00C0H  NOT USED
P4M1 . . . . . . . . . . . . . . . .  D  ADDR  00D6H  NOT USED
P4M2 . . . . . . . . . . . . . . . .  D  ADDR  00E4H  NOT USED
P5 . . . . . . . . . . . . . . . . .  D  ADDR  00E8H  NOT USED
PC . . . . . . . . . . . . . . . . .  B  ADDR  00BEH  NOT USED
PCON . . . . . . . . . . . . . . . .  D  ADDR  0087H  NOT USED
PPCL . . . . . . . . . . . . . . . .  B  ADDR  00BEH  NOT USED
PS . . . . . . . . . . . . . . . . .  B  ADDR  00BCH  NOT USED
PSL. . . . . . . . . . . . . . . . .  B  ADDR  00BCH  NOT USED
PSW. . . . . . . . . . . . . . . . .  D  ADDR  00D0H  NOT USED
PT0. . . . . . . . . . . . . . . . .  B  ADDR  00B9H  NOT USED
PT0L . . . . . . . . . . . . . . . .  B  ADDR  00B9H  NOT USED
PT1. . . . . . . . . . . . . . . . .  B  ADDR  00BBH  NOT USED
PT1L . . . . . . . . . . . . . . . .  B  ADDR  00BBH  NOT USED
PT2. . . . . . . . . . . . . . . . .  B  ADDR  00BDH  NOT USED
PT2L . . . . . . . . . . . . . . . .  B  ADDR  00BDH  NOT USED
PX0. . . . . . . . . . . . . . . . .  B  ADDR  00B8H  NOT USED
PX0L . . . . . . . . . . . . . . . .  B  ADDR  00B8H  NOT USED
PX1. . . . . . . . . . . . . . . . .  B  ADDR  00BAH  NOT USED
PX1L . . . . . . . . . . . . . . . .  B  ADDR  00BAH  NOT USED
RB8. . . . . . . . . . . . . . . . .  B  ADDR  009AH  NOT USED
RCAP2H . . . . . . . . . . . . . . .  D  ADDR  00CBH  NOT USED
RCAP2L . . . . . . . . . . . . . . .  D  ADDR  00CAH  NOT USED
RCLK . . . . . . . . . . . . . . . .  B  ADDR  00CDH  NOT USED
RD . . . . . . . . . . . . . . . . .  B  ADDR  00B7H  NOT USED
REN. . . . . . . . . . . . . . . . .  B  ADDR  009CH  NOT USED
RESET. . . . . . . . . . . . . . . .  C  ADDR  0000H  NOT USED
RI . . . . . . . . . . . . . . . . .  B  ADDR  0098H  NOT USED
RICHTIG. . . . . . . . . . . . . . .  C  ADDR  0071H  NOT USED
RS0. . . . . . . . . . . . . . . . .  B  ADDR  00D3H  NOT USED
RS1. . . . . . . . . . . . . . . . .  B  ADDR  00D4H  NOT USED
RXD. . . . . . . . . . . . . . . . .  B  ADDR  00B0H  NOT USED
SADDR. . . . . . . . . . . . . . . .  D  ADDR  00A9H  NOT USED
SADDR_0. . . . . . . . . . . . . . .  D  ADDR  00A9H  NOT USED
SADDR_1. . . . . . . . . . . . . . .  D  ADDR  00AAH  NOT USED
SADEN. . . . . . . . . . . . . . . .  D  ADDR  00B9H  NOT USED
SADEN_0. . . . . . . . . . . . . . .  D  ADDR  00B9H  NOT USED
SADEN_1. . . . . . . . . . . . . . .  D  ADDR  00BAH  NOT USED
SBUF . . . . . . . . . . . . . . . .  D  ADDR  0099H  NOT USED
SCON . . . . . . . . . . . . . . . .  D  ADDR  0098H  NOT USED
SCORE_BOARD. . . . . . . . . . . . .  D  ADDR  0080H
SINT . . . . . . . . . . . . . . . .  C  ADDR  0023H  NOT USED
SM0. . . . . . . . . . . . . . . . .  B  ADDR  009FH  NOT USED
SM1. . . . . . . . . . . . . . . . .  B  ADDR  009EH  NOT USED
SM2. . . . . . . . . . . . . . . . .  B  ADDR  009DH  NOT USED
SP . . . . . . . . . . . . . . . . .  D  ADDR  0081H  NOT USED
SPCON. . . . . . . . . . . . . . . .  D  ADDR  00C3H  NOT USED
SPCR . . . . . . . . . . . . . . . .  D  ADDR  00D5H  NOT USED
SPDAT. . . . . . . . . . . . . . . .  D  ADDR  00C5H  NOT USED
SPDR . . . . . . . . . . . . . . . .  D  ADDR  0086H  NOT USED
SPSR . . . . . . . . . . . . . . . .  D  ADDR  00AAH  NOT USED
SPSTA. . . . . . . . . . . . . . . .  D  ADDR  00C4H  NOT USED
START. . . . . . . . . . . . . . . .  C  ADDR  0006H
T0 . . . . . . . . . . . . . . . . .  B  ADDR  00B4H  NOT USED
T1 . . . . . . . . . . . . . . . . .  B  ADDR  00B5H  NOT USED
T2CON. . . . . . . . . . . . . . . .  D  ADDR  00C8H  NOT USED
T2MOD. . . . . . . . . . . . . . . .  D  ADDR  00C9H  NOT USED
TB8. . . . . . . . . . . . . . . . .  B  ADDR  009BH  NOT USED
TCLK . . . . . . . . . . . . . . . .  B  ADDR  00CCH  NOT USED
TCON . . . . . . . . . . . . . . . .  D  ADDR  0088H  NOT USED
TF0. . . . . . . . . . . . . . . . .  B  ADDR  008DH  NOT USED
TF1. . . . . . . . . . . . . . . . .  B  ADDR  008FH  NOT USED
TF2. . . . . . . . . . . . . . . . .  B  ADDR  00CFH  NOT USED
TH0. . . . . . . . . . . . . . . . .  D  ADDR  008CH  NOT USED
TH1. . . . . . . . . . . . . . . . .  D  ADDR  008DH  NOT USED
TH2. . . . . . . . . . . . . . . . .  D  ADDR  00CDH  NOT USED
TI . . . . . . . . . . . . . . . . .  B  ADDR  0099H  NOT USED
TIMER0 . . . . . . . . . . . . . . .  C  ADDR  000BH  NOT USED
TIMER1 . . . . . . . . . . . . . . .  C  ADDR  001BH  NOT USED
TIMER2 . . . . . . . . . . . . . . .  C  ADDR  002BH  NOT USED
TL0. . . . . . . . . . . . . . . . .  D  ADDR  008AH  NOT USED
TL1. . . . . . . . . . . . . . . . .  D  ADDR  008BH  NOT USED
TL2. . . . . . . . . . . . . . . . .  D  ADDR  00CCH  NOT USED
TMOD . . . . . . . . . . . . . . . .  D  ADDR  0089H  NOT USED
TR0. . . . . . . . . . . . . . . . .  B  ADDR  008CH  NOT USED
TR1. . . . . . . . . . . . . . . . .  B  ADDR  008EH  NOT USED
TR2. . . . . . . . . . . . . . . . .  B  ADDR  00CAH  NOT USED
TXD. . . . . . . . . . . . . . . . .  B  ADDR  00B1H  NOT USED
W1_S1. . . . . . . . . . . . . . . .  C  ADDR  00A1H
W1_S2. . . . . . . . . . . . . . . .  C  ADDR  00A3H
WAIT . . . . . . . . . . . . . . . .  C  ADDR  009FH
WARTE_PINS . . . . . . . . . . . . .  C  ADDR  0011H
WDTCON . . . . . . . . . . . . . . .  D  ADDR  00A7H  NOT USED
WDTPRG . . . . . . . . . . . . . . .  D  ADDR  00A7H  NOT USED
WDTRST . . . . . . . . . . . . . . .  D  ADDR  00A6H  NOT USED
WR . . . . . . . . . . . . . . . . .  B  ADDR  00B6H  NOT USED
ZEILE_1. . . . . . . . . . . . . . .  C  ADDR  0029H
ZEILE_2. . . . . . . . . . . . . . .  C  ADDR  0032H
ZEILE_3. . . . . . . . . . . . . . .  C  ADDR  0047H
ZEILE_4. . . . . . . . . . . . . . .  C  ADDR  0050H